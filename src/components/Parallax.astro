---
import { Image } from "astro:assets"
import type { ImageMetadata } from 'astro';

const images =  import.meta.glob<{ default: ImageMetadata }>('/src/assets/parallax/*.{jpeg,jpg,png,gif}')

const imagesArray = Array.from(Object.entries(images))
/* const imagesPromises = imagesArray.map(image => image[1])
const myImages = Promise.all(imagesPromises).then(image => image)
console.log(await myImages); */

---
<section class="parallax-container loading" data-length={imagesArray.length}>
  {imagesArray.reverse().map((image, index)=> (
    <Image
      class={`parallax_img plane-${imagesArray.length - index}`} 
      src={image[1]()}
      alt={"parallax image"}
      widths={[1000, 2000, 3000]}
      sizes={'(max-width: 1024px) 1040px, (max-width: 1920px) 1920px, 3000px'}
      format="webp"
    />
  ))}

  <div class="moon">
    <div class="text-container">
      <p>Industrial Designer by <span>Decision</span></p>
      <p>Artist by <span>Hobby</span></p>
      <p>Developer by <span>Curiosity</span></p>
      <p>Goat by <span>Default</span></p>
    </div>
  </div>
</section>

<style>
  .parallax-container {
    display:grid;
    place-items: center;
    position: relative;
    perspective: 30px;
    transform-origin: 50%;
    transform-style: preserve-3d;
    width: 100%;
    height: 100vh;
    overflow-y: scroll;
    scrollbar-width: thin;
  }
  .parallax-container.loading::before {
    position: absolute;
    width: 100%;
    height: 100%;
    content: "Cargando...";
    inset: 0;
    background-color: var(--mono-950);
    z-index: 10;
    display: grid;
    place-items: center;
  }

  .parallax_img {
    position: absolute;
    inset: 0;
    width: 100%;
    height: auto;
    object-fit: contain;
  }

  .plane-1 {
    transform: translateZ(8px);
  }
  .plane-2 {
    transform: translateZ(7px);
  }
  .plane-3 {
    transform: translateZ(6px);
  }
  .plane-4 {
    transform: translateZ(5px);
  }
  .plane-5 {
    transform: translateZ(4px);
  }
  .plane-6 {
    transform: translateZ(3px);
  }
  .plane-7 {
    transform: translateZ(5px) scale(1) translateY(10px)
  }
  .plane-8 {
    transform: translateZ(0px);
  }
  .moon{
    display: grid;
    place-items: center;
    position: relative;
    padding: 10px;
    border-radius: 50%;
    width: 50%;
    aspect-ratio: 1 / 1;
    background-color: aliceblue;
    transform: translateZ(5px) scale(.5);
  }
  .text-container {
    display: grid;
    place-items: center;

    p{
      font-size: 3rem ;
      text-align: center;
      color: var(--blue-800)
    }
  }
</style>

<script>
  const parallaxContainer: HTMLDivElement | null  = document.querySelector(".parallax-container")
  const imagesQuantity = Number(parallaxContainer?.dataset.length)

  const images = document.querySelectorAll(".parallax_img")
  let imagesLoaded = 0
  images.forEach((image)=> {
    image.addEventListener("load", ()=> {
      imagesLoaded ++
      imagesLoaded === imagesQuantity && parallaxContainer?.classList.remove("loading")
    })
  })
</script>