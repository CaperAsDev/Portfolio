---
import SkillGroup from "@/components/organisms/SkillGroup.astro";
import SoftSkillsData from "@/data/softSkills.json";

interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;
const texts = await Astro.glob("/src/i18n/softSkills-*.md");
const text = texts.filter((item) => item.frontmatter.lang === lang);
const IntroText = text[0].Content;
---

<header>
  <IntroText />
</header>
<div class="groups-wrapper">
  {SoftSkillsData.map((group) => <SkillGroup {...group} />)}
</div>

<script>
  const skillsSection: HTMLElement | null = document.querySelector("#skills");
  const cards = skillsSection?.querySelectorAll(".card");
  cards?.forEach((card) => {
    card.addEventListener("click", () => {
      card.classList.toggle("is-flipped");
      const isFlipped = card.classList.contains("is-flipped");
      card.setAttribute("aria-pressed", isFlipped.toString());
    });
    card.addEventListener("keydown", (e) => {
      const event = e as KeyboardEvent;
      if (event.code === "Enter" || event.code === "Space") {
        event.preventDefault();
        card.classList.toggle("is-flipped");
        const isFlipped = card.classList.contains("is-flipped");
        card.setAttribute("aria-pressed", isFlipped.toString());
      }
    });
  });
</script>
<style>
  header {
    display: grid;
    margin-block: 1rem;
    gap: 1rem;

    strong {
      color: var(--blue-300);
      mix-blend-mode: luminosity;
    }
  }

  .groups-wrapper {
    margin-block: 3rem;
    display: grid;
    column-gap: 10px;
    row-gap: 3rem;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    container-type: inline-size;
    container-name: groups-wrapper;
  }
</style>
