---
import SkillGroup from "@/components/organisms/SkillGroup.astro";
import SoftSkillsData from "@/data/softSkills.json";
import Section from "@/layouts/Section.astro";
import { separateLastParagraph } from "@/js/utils";
import type { MarkdownInstance } from "astro";

interface Frontmatter {
  title: string;
  lang: string;
}

interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;
const mdFiles = Object.values(
  import.meta.glob<MarkdownInstance<Frontmatter>>("/src/i18n/softSkills-*.md", {
    eager: true,
  })
);
const [mdContent] = mdFiles.filter((item) => item.frontmatter.lang === lang);
const componentText = await mdContent.compiledContent();

const [sectionDescription, sectionIntro] = separateLastParagraph(
  componentText,
  "<p>"
);
---

<Section
  icon="windsock"
  title={mdContent.frontmatter.title}
  identifier="skills"
>
  <Fragment set:html={sectionDescription} slot={"section-description"} />
  <Fragment set:html={sectionIntro} slot={"section-intro"} />

  <div class="groups-wrapper" slot="main-content">
    {SoftSkillsData[lang].map((group) => <SkillGroup {...group} />)}
  </div>
</Section>
<script>
  const skillsSection: HTMLElement | null = document.querySelector("#skills");
  const cards = skillsSection?.querySelectorAll(".card");
  cards?.forEach((card) => {
    card.addEventListener("click", () => {
      card.classList.toggle("is-flipped");
      const isFlipped = card.classList.contains("is-flipped");
      card.setAttribute("aria-pressed", isFlipped.toString());
    });
    card.addEventListener("keydown", (e) => {
      const event = e as KeyboardEvent;
      if (event.code === "Enter" || event.code === "Space") {
        event.preventDefault();
        card.classList.toggle("is-flipped");
        const isFlipped = card.classList.contains("is-flipped");
        card.setAttribute("aria-pressed", isFlipped.toString());
      }
    });
  });
</script>
<style>
  .groups-wrapper {
    margin-block: 3rem;
    display: grid;
    column-gap: 10px;
    row-gap: 3rem;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    container-type: inline-size;
    container-name: groups-wrapper;
  }
</style>
