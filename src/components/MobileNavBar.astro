---
import MobileNavItem from "@/components/MobileNavItem.astro";
import Hamburger from "@/components/hamburger.astro";
import Popover from "@/components/Popover.astro";
import Linktree from "@/components/Linktree.astro";
import { getLangFromUrl } from "@/i18n/utils";
import { nav } from "@/i18n/ui";

const lang = getLangFromUrl(Astro.url);
const { links, contact } = nav[lang];
---

<nav>
  <details class="mobile_nav-menu" id="mobile-menu">
    <summary aria-controls="mobile-menu" aria-expanded="false">
      <Hamburger />
    </summary>
    <ul>
      {
        links.map((item) => (
          <MobileNavItem title={item.title} link={item.link} />
        ))
      }
      <Popover title={contact.title} targetID="linktree-mobile">
        <Linktree />
      </Popover>
    </ul>
  </details>
</nav>

<style>
  nav {
    width: fit-content;
    display: grid;
    position: fixed;
    right: 0px;
    top: calc(50% - 30px);
    padding: 7px 3px 7px 7px;
    place-items: start;
    border-top-left-radius: 20px;
    border-bottom-left-radius: 20px;
    background-color: var(--blue-700);
    border-inline: 2px var(--blue-500) solid;
    opacity: 50%;
    transition: opacity 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
    transition: transform 500ms cubic-bezier(0.165, 0.84, 0.44, 1);
    cursor: pointer;

    &:focus,
    &:hover,
    &:has(details[open]),
    &:has(summary:focus) {
      opacity: 100%;
      transform: scale(1.1);
    }

    &:has([open]) {
      opacity: 100%;
      padding: 10px;

      summary {
        border-bottom: 2px solid var(--blue-800);
        text-align: center;
      }
    }
  }
  details {
    ul {
      display: grid;
      gap: 1rem;
      padding: 10px;
      padding-bottom: 0;
      list-style: none;
    }
  }
  summary {
    text-align: end;
    list-style: none;
    color: var(--blue-100);

    &:focus,
    &:hover {
      outline: none;

      svg {
        transform: scale(1.2);
        color: var(--pink-300);
      }
    }
  }

  @media screen and (orientation: landscape) {
    nav {
      top: 10%;
    }
  }

  @media screen and (min-width: 768px) {
    nav {
      display: none;
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    details::details-content {
      transition:
        all 0.3s ease allow-discrete,
        content-visibility 0.3s allow-discrete;
      height: 0;
      width: 0;
      overflow: clip;
    }

    @supports (interpolate-size: allow-keywords) {
      :root {
        interpolate-size: allow-keywords;
      }

      [open]::details-content {
        height: auto;
        width: auto;
      }
    }

    @supports not (interpolate-size: allow-keywords) {
      details::details-content {
        block-size: 0;
      }

      [open]::details-content {
        block-size: auto;
        block-size: calc-size(auto, size);
        height: 300px;
      }
    }
  }
</style>

<script>
  const menu: HTMLDetailsElement | null =
    document.querySelector(".mobile_nav-menu");

  const popoverButton = menu?.querySelector(".popover-button");

  const summary = document.querySelector(".mobile_nav-menu summary");

  const anchors: NodeListOf<HTMLAnchorElement> =
    document.querySelectorAll("nav li a");

  const svg = summary?.querySelector("svg");

  const anchorsArray = Array.from(anchors);

  const checkSiblings = () => {
    setTimeout(() => {
      const focusSiblingAnchor =
        anchorsArray.some((anchor) => anchor === document.activeElement) ||
        popoverButton === document.activeElement ||
        summary === document.activeElement;

      !focusSiblingAnchor && menu && (menu.open = false);
    }, 200);
  };

  window.addEventListener("hashchange", () => {
    if (menu) {
      menu.open = false;
    }
  });

  summary?.addEventListener("blur", checkSiblings);
  popoverButton?.addEventListener("blur", checkSiblings);

  menu?.addEventListener("toggle", () => {
    if (summary && menu && svg) {
      summary.ariaExpanded = String(menu.open);
      svg.classList.toggle("open");
    }
  });

  anchors.forEach((anchor) => {
    anchor.addEventListener("blur", checkSiblings);
  });
</script>
