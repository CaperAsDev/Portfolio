---
import { Icon } from "astro-icon/components";
interface Props {
  icon: string;
  link: string;
  label: string;
  customClass?: string;
  text?: string;
  target?: string;
  rel?: string;
  lang?: string;
}

const {
  icon,
  link,
  label,
  customClass,
  text,
  target = "_blank",
  rel = "noopener noreferrer",
} = Astro.props;

const iconSet = icon.split(":");
---

<a
  aria-label={`Link to ${label}`}
  href={link}
  rel={rel}
  target={target}
  title={label}
  class={`${customClass || ""} ${text ? "innerText" : ""}`}
  data-text={text}
>
  <Icon name={`${iconSet[0]}:${iconSet[1]}`} width={30} height={30} />
</a>

<style>
  a {
    --clr: var(--pink-200);
    --bg-clr: var(--pink-950);
    --icon-size: var(--fs-m);
    position: relative;
    z-index: 20;
    color: var(--clr);
    background-color: var(--bg-clr);
    padding: 10px;
    border-radius: calc(var(--icon-size));
    display: flex;
    justify-content: center;
    align-items: center;

    svg {
      height: var(--icon-size);
      width: var(--icon-size);
    }
  }
  a.innerText {
    --text-size: var(--fs-s);
    justify-content: center;
    gap: 10px;

    &::after {
      content: attr(data-text);
      font-size: var(--text-size);
      font-family: "Comfortaa Variable", system-ui;
      position: relative;
    }
  }
  a.innerText.textXS {
    --text-size: var(--fs-xs);
  }
  @media screen and (width >= 768px) {
    a {
      &:hover,
      &:focus {
        transform: scale(1.1);
        transition: all 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
      }
    }
  }

  @media screen and (width >= 1440px) {
    a {
      --icon-size: var(--fs-s);
    }
  }
</style>
