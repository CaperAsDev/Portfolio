---
import { Icon } from "astro-icon/components";

type Level = {
  level: number;
  description: string;
};

interface Props {
  name: string;
  description: string;
  levels?: Level[];
  group?: string;
  currentLevel: number;
  skillIcon: string;
  groupIcon: string;
}
const { name, description, levels, group, currentLevel, skillIcon, groupIcon } =
  Astro.props;
---

<div class="card-wrapper">
  <details name={group}>
    <summary>
      <div class="card-icon">
        <Icon name={skillIcon} />
      </div>
      <p class="title">{name}</p>
    </summary>
    <div class="scene">
      <div class="card">
        <div class="face front">
          <p class="description">
            {description}
          </p>
        </div>
        <div class="face back">
          <p>
            Texto de atras de referencia, aqui va a ir una descripcion de como
            logre adquirir la habilidad y sus aplicaciones practicas.
          </p>
        </div>
      </div>
    </div>
  </details>
  <footer>
    <button popovertarget="levelsMenu">{currentLevel}</button>
    <div id="levelsMenu" popover></div>
    <div class="group-icon">
      <Icon name={groupIcon} />
    </div>
  </footer>
</div>
<style>
  .card-wrapper {
    border-radius: 1rem;
    border-top: 1px solid palevioletred;
    border-bottom: 1px solid palevioletred;
  }
  details {
  }

  summary {
    position: relative;
    padding: 5px;
    border-right: 1px solid palevioletred;
    border-top-right-radius: 1rem;
    border-left: 1px solid palevioletred;
    border-top-left-radius: 1rem;
    background-color: oklch(from rgb(64, 50, 128) l c h / 0.5);

    p {
      padding: 10px;
    }

    .card-icon {
      position: absolute;
      width: 60px;
      height: 60px;
      top: -30px;
      left: -30px;

      svg {
        height: 100%;
        width: 100%;
      }
    }
    .title {
      font-family: "Subjectivity";
      text-align: end;
    }
    .description {
      font-family: "Comfortaa Variable";
      font-size: var(--fs-s);
      text-wrap: balance;
      padding: 5px;
    }
  }
  footer {
    position: relative;
    width: 100%;
    display: grid;
    place-items: center;
    padding-bottom: 5px;
    border-bottom-right-radius: 1rem;
    border-bottom-left-radius: 1rem;
    border-right: 1px solid palevioletred;
    border-left: 1px solid palevioletred;
    background-color: oklch(from rgb(64, 50, 128) l c h / 0.5);

    button {
      width: 50px;
      height: 50px;
      display: grid;
      place-items: center;
      border-radius: 50%;
    }

    .group-icon {
      position: absolute;
      width: 60px;
      height: 60px;
      right: -35px;
      bottom: -35px;

      svg {
        width: 100%;
        height: 100%;
      }
    }
  }
  /* ----------------------- Flip styles --------------------------- */

  .scene {
    height: 300px;
    width: 100%;
    perspective: 1000px;
    display: grid;
    place-items: center;
    padding: 10px;
  }
  .card {
    width: 100%;
    height: 100%;
    position: relative;
    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.1);
    transform-style: preserve-3d;
    transform-origin: center right;
  }
  .face {
    padding: 10px;
    position: absolute;
    height: 100%;
    width: 100%;
    backface-visibility: hidden;
  }
  .face.front {
    background-color: oklch(from aqua l c h / 0.2);
  }
  .face.back {
    background-color: oklch(from purple l c h / 0.2);
    transform: rotateY(180deg);
  }
  .card.is-flipped {
    transform: translateX(-100%) rotateY(-180deg);
  }
</style>
