---
import ProjectsData from "@/data/projects.json";
import Project from "@/components/molecules/Project.astro";
import Section from "@/layouts/Section.astro";
import { separateLastParagraph } from "@/js/utils";
import type { MarkdownInstance } from "astro";

interface Frontmatter {
  title: string;
  lang: string;
}

interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;
const projectsImgs = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/images/*.project.{jpeg,jpg,png}"
);
const imagesArray = Object.entries(projectsImgs);

const mdFiles = Object.values(
  import.meta.glob<MarkdownInstance<Frontmatter>>("/src/i18n/projects-*.md", {
    eager: true,
  })
);
const [mdContent] = mdFiles.filter((item) => {
  return item.frontmatter.lang === lang;
});
const componentString = await mdContent.compiledContent();
const [sectionDescription, sectionIntro] = separateLastParagraph(
  componentString,
  "<p>"
);
---

<Section
  title={mdContent.frontmatter.title}
  icon="briefcase"
  customClass="projects-wrapper"
  identifier="projects"
>
  <Fragment set:html={sectionDescription} slot={"section-description"} />
  <Fragment set:html={sectionIntro} slot={"section-intro"} />
  <div class="projects-wrapper" slot="main-content">
    {
      ProjectsData.map((project) => (
        <Project
          title={project.header[lang].title}
          description={project.header[lang].description}
          techsIcon={project.techsIcon}
          links={project.links}
          images={imagesArray.filter((image) => image[0].includes(project.tag))}
          notes={project.notes[lang]}
        />
      ))
    }
  </div>
</Section>
<style>
  header {
    display: grid;
    margin-block: 1rem;
    gap: 1rem;

    strong {
      color: var(--blue-300);
      mix-blend-mode: luminosity;
    }
  }
</style>
