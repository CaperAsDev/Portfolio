---
import { Icon } from "astro-icon/components";

interface Props {
  title: string;
  icon: string;
  customClass?: string;
  identifier?: string;
}

const { title, icon, customClass, identifier } = Astro.props;
---

<section class="wrapper" id={identifier}>
  <header>
    {Astro.slots.has('section-intro') && Astro.slots.has('section-description') ? (
      <details>
        <summary>
        <h2>
          <Icon name={`tabler:${icon}`} width={30} height={30} />
          <span>{title}</span>
          <Icon class="arrow" name={`tabler:arrow-badge-right`} width={30} height={30} />
        </h2>
        </summary>
        <div class="detail-description-wrapper">
          <slot name="section-description" />
        </div>
      </details>
      <slot name="section-intro" />
    )
    : (
      <h2>
        <Icon name={`tabler:${icon}`} width={30} height={30} />
        <span>{title}</span>
      </h2>
      <slot name="section-intro" />
    )}
  </header>
  <div class={`slot-wrapper ${customClass || ""}`}>
    <slot name="main-content" />
  </div>
</section>
<style>
  .wrapper {
    width: clamp(300px, 100%, 1024px);
    padding-inline: clamp(5px, 5vw, 50px);
    display: grid;
    place-items: center;
    gap: 20px;
    height: fit-content;

    header {
      width: 100%;
    }
    h2 {
      width: 100%;
      display: flex;
      align-items: end;
      gap: 10px;

      svg {
        mix-blend-mode: luminosity;
        width: clamp(30px, 2.5vw, 50px);
        height: clamp(30px, 2.5vw, 50px);

        path {
          stroke-width: 1.5px;
        }
      }
    }
    .slot-wrapper {
      width: 100%;
    }
  }
  header {
    display: grid;
    margin-block: 1rem;
    gap: 1rem;

    strong {
      color: var(--blue-300);
      mix-blend-mode: luminosity;
    }
  }
  
  summary {
    width:fit-content;
    cursor: pointer;
    
    .arrow{
      transition: rotate .5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
  }

  details:not([open]) summary:hover, details[open], details summary:focus {
    .arrow {
      rotate:90deg;
    }
  }

  h2 {
    padding-block: 2px;
    margin-block-end: 1rem;
  }
  
  .detail-description-wrapper{
    display: grid;
    gap: var(--fs-s);
    padding: var(--fs-s);
    border: 1px solid var(--blue-300);
    border-radius: var(--fs-s);
  }
  .techs-wrapper {
    position: relative;
    width: clamp(300px, 90%, 1024px);
    display: flex;
    flex-wrap: wrap;
    gap: clamp(5px, 2vw, 20px);

    p {
      margin-block: 10px;
      min-width: 100%;
    }
  }
  .projects-wrapper {
    display: grid;
    place-items: center;
    margin-block: 10px;
  }
  /* --------- dialogs reveal animation --------- */
  @media (prefers-reduced-motion: no-preference) {
    details::details-content {
      transition:
        all 0.3s ease,
        content-visibility 0.3s allow-discrete;
      height: 0;
      overflow: clip;
    }

    @supports (interpolate-size: allow-keywords) {
      :root {
        interpolate-size: allow-keywords;
      }

      [open]::details-content {
        height: auto;
      }
    }

    @supports not (interpolate-size: allow-keywords) {
      details::details-content {
        block-size: 0;
      }

      [open]::details-content {
        block-size: auto;
        block-size: calc-size(auto);
        height: 300px;
      }
    }
  }

  @media screen and (width >= 1024px) {
    .wrapper {
      width: clamp(1024px, 100%, 1280px);
    }
  }
</style>
